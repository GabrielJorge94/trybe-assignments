{"ast":null,"code":"// Generated by LiveScript 1.6.0\nvar split, join, lines, unlines, words, unwords, chars, unchars, reverse, repeat, capitalize, camelize, dasherize;\nsplit = curry$(function (sep, str) {\n  return str.split(sep);\n});\njoin = curry$(function (sep, xs) {\n  return xs.join(sep);\n});\n\nlines = function (str) {\n  if (!str.length) {\n    return [];\n  }\n\n  return str.split('\\n');\n};\n\nunlines = function (it) {\n  return it.join('\\n');\n};\n\nwords = function (str) {\n  if (!str.length) {\n    return [];\n  }\n\n  return str.split(/[ ]+/);\n};\n\nunwords = function (it) {\n  return it.join(' ');\n};\n\nchars = function (it) {\n  return it.split('');\n};\n\nunchars = function (it) {\n  return it.join('');\n};\n\nreverse = function (str) {\n  return str.split('').reverse().join('');\n};\n\nrepeat = curry$(function (n, str) {\n  var result, i$;\n  result = '';\n\n  for (i$ = 0; i$ < n; ++i$) {\n    result += str;\n  }\n\n  return result;\n});\n\ncapitalize = function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\ncamelize = function (it) {\n  return it.replace(/[-_]+(.)?/g, function (arg$, c) {\n    return (c != null ? c : '').toUpperCase();\n  });\n};\n\ndasherize = function (str) {\n  return str.replace(/([^-A-Z])([A-Z]+)/g, function (arg$, lower, upper) {\n    return lower + \"-\" + (upper.length > 1 ? upper : upper.toLowerCase());\n  }).replace(/^([A-Z]+)/, function (arg$, upper) {\n    if (upper.length > 1) {\n      return upper + \"-\";\n    } else {\n      return upper.toLowerCase();\n    }\n  });\n};\n\nmodule.exports = {\n  split: split,\n  join: join,\n  lines: lines,\n  unlines: unlines,\n  words: words,\n  unwords: unwords,\n  chars: chars,\n  unchars: unchars,\n  reverse: reverse,\n  repeat: repeat,\n  capitalize: capitalize,\n  camelize: camelize,\n  dasherize: dasherize\n};\n\nfunction curry$(f, bound) {\n  var context,\n      _curry = function (args) {\n    return f.length > 1 ? function () {\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) < f.length && arguments.length ? _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n\n  return _curry();\n}","map":{"version":3,"sources":["/home/gabriel/Desktop/Trybe/trybe-assignments/02-front-end/11-intro-to-react/day01-hello-world-react/frontendcontent/node_modules/prelude-ls/lib/Str.js"],"names":["split","join","lines","unlines","words","unwords","chars","unchars","reverse","repeat","capitalize","camelize","dasherize","curry$","sep","str","xs","length","it","n","result","i$","charAt","toUpperCase","slice","replace","arg$","c","lower","upper","toLowerCase","module","exports","f","bound","context","_curry","args","params","concat","push","apply","arguments","call"],"mappings":"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","sourcesContent":["// Generated by LiveScript 1.6.0\nvar split, join, lines, unlines, words, unwords, chars, unchars, reverse, repeat, capitalize, camelize, dasherize;\nsplit = curry$(function(sep, str){\n  return str.split(sep);\n});\njoin = curry$(function(sep, xs){\n  return xs.join(sep);\n});\nlines = function(str){\n  if (!str.length) {\n    return [];\n  }\n  return str.split('\\n');\n};\nunlines = function(it){\n  return it.join('\\n');\n};\nwords = function(str){\n  if (!str.length) {\n    return [];\n  }\n  return str.split(/[ ]+/);\n};\nunwords = function(it){\n  return it.join(' ');\n};\nchars = function(it){\n  return it.split('');\n};\nunchars = function(it){\n  return it.join('');\n};\nreverse = function(str){\n  return str.split('').reverse().join('');\n};\nrepeat = curry$(function(n, str){\n  var result, i$;\n  result = '';\n  for (i$ = 0; i$ < n; ++i$) {\n    result += str;\n  }\n  return result;\n});\ncapitalize = function(str){\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\ncamelize = function(it){\n  return it.replace(/[-_]+(.)?/g, function(arg$, c){\n    return (c != null ? c : '').toUpperCase();\n  });\n};\ndasherize = function(str){\n  return str.replace(/([^-A-Z])([A-Z]+)/g, function(arg$, lower, upper){\n    return lower + \"-\" + (upper.length > 1\n      ? upper\n      : upper.toLowerCase());\n  }).replace(/^([A-Z]+)/, function(arg$, upper){\n    if (upper.length > 1) {\n      return upper + \"-\";\n    } else {\n      return upper.toLowerCase();\n    }\n  });\n};\nmodule.exports = {\n  split: split,\n  join: join,\n  lines: lines,\n  unlines: unlines,\n  words: words,\n  unwords: unwords,\n  chars: chars,\n  unchars: unchars,\n  reverse: reverse,\n  repeat: repeat,\n  capitalize: capitalize,\n  camelize: camelize,\n  dasherize: dasherize\n};\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}"]},"metadata":{},"sourceType":"script"}