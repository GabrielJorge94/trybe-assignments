{"ast":null,"code":"// Generated by LiveScript 1.6.0\nvar max, min, negate, abs, signum, quot, rem, div, mod, recip, pi, tau, exp, sqrt, ln, pow, sin, tan, cos, asin, acos, atan, atan2, truncate, round, ceiling, floor, isItNaN, even, odd, gcd, lcm;\nmax = curry$(function (x$, y$) {\n  return x$ > y$ ? x$ : y$;\n});\nmin = curry$(function (x$, y$) {\n  return x$ < y$ ? x$ : y$;\n});\n\nnegate = function (x) {\n  return -x;\n};\n\nabs = Math.abs;\n\nsignum = function (x) {\n  if (x < 0) {\n    return -1;\n  } else if (x > 0) {\n    return 1;\n  } else {\n    return 0;\n  }\n};\n\nquot = curry$(function (x, y) {\n  return ~~(x / y);\n});\nrem = curry$(function (x$, y$) {\n  return x$ % y$;\n});\ndiv = curry$(function (x, y) {\n  return Math.floor(x / y);\n});\nmod = curry$(function (x$, y$) {\n  var ref$;\n  return (x$ % (ref$ = y$) + ref$) % ref$;\n});\n\nrecip = function (it) {\n  return 1 / it;\n};\n\npi = Math.PI;\ntau = pi * 2;\nexp = Math.exp;\nsqrt = Math.sqrt;\nln = Math.log;\npow = curry$(function (x$, y$) {\n  return Math.pow(x$, y$);\n});\nsin = Math.sin;\ntan = Math.tan;\ncos = Math.cos;\nasin = Math.asin;\nacos = Math.acos;\natan = Math.atan;\natan2 = curry$(function (x, y) {\n  return Math.atan2(x, y);\n});\n\ntruncate = function (x) {\n  return ~~x;\n};\n\nround = Math.round;\nceiling = Math.ceil;\nfloor = Math.floor;\n\nisItNaN = function (x) {\n  return x !== x;\n};\n\neven = function (x) {\n  return x % 2 === 0;\n};\n\nodd = function (x) {\n  return x % 2 !== 0;\n};\n\ngcd = curry$(function (x, y) {\n  var z;\n  x = Math.abs(x);\n  y = Math.abs(y);\n\n  while (y !== 0) {\n    z = x % y;\n    x = y;\n    y = z;\n  }\n\n  return x;\n});\nlcm = curry$(function (x, y) {\n  return Math.abs(Math.floor(x / gcd(x, y) * y));\n});\nmodule.exports = {\n  max: max,\n  min: min,\n  negate: negate,\n  abs: abs,\n  signum: signum,\n  quot: quot,\n  rem: rem,\n  div: div,\n  mod: mod,\n  recip: recip,\n  pi: pi,\n  tau: tau,\n  exp: exp,\n  sqrt: sqrt,\n  ln: ln,\n  pow: pow,\n  sin: sin,\n  tan: tan,\n  cos: cos,\n  acos: acos,\n  asin: asin,\n  atan: atan,\n  atan2: atan2,\n  truncate: truncate,\n  round: round,\n  ceiling: ceiling,\n  floor: floor,\n  isItNaN: isItNaN,\n  even: even,\n  odd: odd,\n  gcd: gcd,\n  lcm: lcm\n};\n\nfunction curry$(f, bound) {\n  var context,\n      _curry = function (args) {\n    return f.length > 1 ? function () {\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) < f.length && arguments.length ? _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n\n  return _curry();\n}","map":{"version":3,"sources":["/home/gabriel/Desktop/Trybe/trybe-assignments/02-front-end/11-intro-to-react/day01-hello-world-react/frontendcontent/node_modules/prelude-ls/lib/Num.js"],"names":["max","min","negate","abs","signum","quot","rem","div","mod","recip","pi","tau","exp","sqrt","ln","pow","sin","tan","cos","asin","acos","atan","atan2","truncate","round","ceiling","floor","isItNaN","even","odd","gcd","lcm","curry$","x$","y$","x","Math","y","ref$","it","PI","log","ceil","z","module","exports","f","bound","context","_curry","args","length","params","concat","push","apply","arguments","call"],"mappings":"AAAA;AACA,IAAIA,GAAJ,EAASC,GAAT,EAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,MAA3B,EAAmCC,IAAnC,EAAyCC,GAAzC,EAA8CC,GAA9C,EAAmDC,GAAnD,EAAwDC,KAAxD,EAA+DC,EAA/D,EAAmEC,GAAnE,EAAwEC,GAAxE,EAA6EC,IAA7E,EAAmFC,EAAnF,EAAuFC,GAAvF,EAA4FC,GAA5F,EAAiGC,GAAjG,EAAsGC,GAAtG,EAA2GC,IAA3G,EAAiHC,IAAjH,EAAuHC,IAAvH,EAA6HC,KAA7H,EAAoIC,QAApI,EAA8IC,KAA9I,EAAqJC,OAArJ,EAA8JC,KAA9J,EAAqKC,OAArK,EAA8KC,IAA9K,EAAoLC,GAApL,EAAyLC,GAAzL,EAA8LC,GAA9L;AACA/B,GAAG,GAAGgC,MAAM,CAAC,UAASC,EAAT,EAAaC,EAAb,EAAgB;AAC3B,SAAOD,EAAE,GAAGC,EAAL,GAAUD,EAAV,GAAeC,EAAtB;AACD,CAFW,CAAZ;AAGAjC,GAAG,GAAG+B,MAAM,CAAC,UAASC,EAAT,EAAaC,EAAb,EAAgB;AAC3B,SAAOD,EAAE,GAAGC,EAAL,GAAUD,EAAV,GAAeC,EAAtB;AACD,CAFW,CAAZ;;AAGAhC,MAAM,GAAG,UAASiC,CAAT,EAAW;AAClB,SAAO,CAACA,CAAR;AACD,CAFD;;AAGAhC,GAAG,GAAGiC,IAAI,CAACjC,GAAX;;AACAC,MAAM,GAAG,UAAS+B,CAAT,EAAW;AAClB,MAAIA,CAAC,GAAG,CAAR,EAAW;AACT,WAAO,CAAC,CAAR;AACD,GAFD,MAEO,IAAIA,CAAC,GAAG,CAAR,EAAW;AAChB,WAAO,CAAP;AACD,GAFM,MAEA;AACL,WAAO,CAAP;AACD;AACF,CARD;;AASA9B,IAAI,GAAG2B,MAAM,CAAC,UAASG,CAAT,EAAYE,CAAZ,EAAc;AAC1B,SAAO,CAAC,EAAEF,CAAC,GAAGE,CAAN,CAAR;AACD,CAFY,CAAb;AAGA/B,GAAG,GAAG0B,MAAM,CAAC,UAASC,EAAT,EAAaC,EAAb,EAAgB;AAC3B,SAAOD,EAAE,GAAGC,EAAZ;AACD,CAFW,CAAZ;AAGA3B,GAAG,GAAGyB,MAAM,CAAC,UAASG,CAAT,EAAYE,CAAZ,EAAc;AACzB,SAAOD,IAAI,CAACV,KAAL,CAAWS,CAAC,GAAGE,CAAf,CAAP;AACD,CAFW,CAAZ;AAGA7B,GAAG,GAAGwB,MAAM,CAAC,UAASC,EAAT,EAAaC,EAAb,EAAgB;AAC3B,MAAII,IAAJ;AACA,SAAO,CAAEL,EAAD,IAAQK,IAAI,GAAGJ,EAAf,IAAqBI,IAAtB,IAA8BA,IAArC;AACD,CAHW,CAAZ;;AAIA7B,KAAK,GAAI,UAAS8B,EAAT,EAAY;AACnB,SAAO,IAAIA,EAAX;AACD,CAFD;;AAGA7B,EAAE,GAAG0B,IAAI,CAACI,EAAV;AACA7B,GAAG,GAAGD,EAAE,GAAG,CAAX;AACAE,GAAG,GAAGwB,IAAI,CAACxB,GAAX;AACAC,IAAI,GAAGuB,IAAI,CAACvB,IAAZ;AACAC,EAAE,GAAGsB,IAAI,CAACK,GAAV;AACA1B,GAAG,GAAGiB,MAAM,CAAC,UAASC,EAAT,EAAaC,EAAb,EAAgB;AAC3B,SAAOE,IAAI,CAACrB,GAAL,CAASkB,EAAT,EAAaC,EAAb,CAAP;AACD,CAFW,CAAZ;AAGAlB,GAAG,GAAGoB,IAAI,CAACpB,GAAX;AACAC,GAAG,GAAGmB,IAAI,CAACnB,GAAX;AACAC,GAAG,GAAGkB,IAAI,CAAClB,GAAX;AACAC,IAAI,GAAGiB,IAAI,CAACjB,IAAZ;AACAC,IAAI,GAAGgB,IAAI,CAAChB,IAAZ;AACAC,IAAI,GAAGe,IAAI,CAACf,IAAZ;AACAC,KAAK,GAAGU,MAAM,CAAC,UAASG,CAAT,EAAYE,CAAZ,EAAc;AAC3B,SAAOD,IAAI,CAACd,KAAL,CAAWa,CAAX,EAAcE,CAAd,CAAP;AACD,CAFa,CAAd;;AAGAd,QAAQ,GAAG,UAASY,CAAT,EAAW;AACpB,SAAO,CAAC,CAACA,CAAT;AACD,CAFD;;AAGAX,KAAK,GAAGY,IAAI,CAACZ,KAAb;AACAC,OAAO,GAAGW,IAAI,CAACM,IAAf;AACAhB,KAAK,GAAGU,IAAI,CAACV,KAAb;;AACAC,OAAO,GAAG,UAASQ,CAAT,EAAW;AACnB,SAAOA,CAAC,KAAKA,CAAb;AACD,CAFD;;AAGAP,IAAI,GAAG,UAASO,CAAT,EAAW;AAChB,SAAOA,CAAC,GAAG,CAAJ,KAAU,CAAjB;AACD,CAFD;;AAGAN,GAAG,GAAG,UAASM,CAAT,EAAW;AACf,SAAOA,CAAC,GAAG,CAAJ,KAAU,CAAjB;AACD,CAFD;;AAGAL,GAAG,GAAGE,MAAM,CAAC,UAASG,CAAT,EAAYE,CAAZ,EAAc;AACzB,MAAIM,CAAJ;AACAR,EAAAA,CAAC,GAAGC,IAAI,CAACjC,GAAL,CAASgC,CAAT,CAAJ;AACAE,EAAAA,CAAC,GAAGD,IAAI,CAACjC,GAAL,CAASkC,CAAT,CAAJ;;AACA,SAAOA,CAAC,KAAK,CAAb,EAAgB;AACdM,IAAAA,CAAC,GAAGR,CAAC,GAAGE,CAAR;AACAF,IAAAA,CAAC,GAAGE,CAAJ;AACAA,IAAAA,CAAC,GAAGM,CAAJ;AACD;;AACD,SAAOR,CAAP;AACD,CAVW,CAAZ;AAWAJ,GAAG,GAAGC,MAAM,CAAC,UAASG,CAAT,EAAYE,CAAZ,EAAc;AACzB,SAAOD,IAAI,CAACjC,GAAL,CAASiC,IAAI,CAACV,KAAL,CAAWS,CAAC,GAAGL,GAAG,CAACK,CAAD,EAAIE,CAAJ,CAAP,GAAgBA,CAA3B,CAAT,CAAP;AACD,CAFW,CAAZ;AAGAO,MAAM,CAACC,OAAP,GAAiB;AACf7C,EAAAA,GAAG,EAAEA,GADU;AAEfC,EAAAA,GAAG,EAAEA,GAFU;AAGfC,EAAAA,MAAM,EAAEA,MAHO;AAIfC,EAAAA,GAAG,EAAEA,GAJU;AAKfC,EAAAA,MAAM,EAAEA,MALO;AAMfC,EAAAA,IAAI,EAAEA,IANS;AAOfC,EAAAA,GAAG,EAAEA,GAPU;AAQfC,EAAAA,GAAG,EAAEA,GARU;AASfC,EAAAA,GAAG,EAAEA,GATU;AAUfC,EAAAA,KAAK,EAAEA,KAVQ;AAWfC,EAAAA,EAAE,EAAEA,EAXW;AAYfC,EAAAA,GAAG,EAAEA,GAZU;AAafC,EAAAA,GAAG,EAAEA,GAbU;AAcfC,EAAAA,IAAI,EAAEA,IAdS;AAefC,EAAAA,EAAE,EAAEA,EAfW;AAgBfC,EAAAA,GAAG,EAAEA,GAhBU;AAiBfC,EAAAA,GAAG,EAAEA,GAjBU;AAkBfC,EAAAA,GAAG,EAAEA,GAlBU;AAmBfC,EAAAA,GAAG,EAAEA,GAnBU;AAoBfE,EAAAA,IAAI,EAAEA,IApBS;AAqBfD,EAAAA,IAAI,EAAEA,IArBS;AAsBfE,EAAAA,IAAI,EAAEA,IAtBS;AAuBfC,EAAAA,KAAK,EAAEA,KAvBQ;AAwBfC,EAAAA,QAAQ,EAAEA,QAxBK;AAyBfC,EAAAA,KAAK,EAAEA,KAzBQ;AA0BfC,EAAAA,OAAO,EAAEA,OA1BM;AA2BfC,EAAAA,KAAK,EAAEA,KA3BQ;AA4BfC,EAAAA,OAAO,EAAEA,OA5BM;AA6BfC,EAAAA,IAAI,EAAEA,IA7BS;AA8BfC,EAAAA,GAAG,EAAEA,GA9BU;AA+BfC,EAAAA,GAAG,EAAEA,GA/BU;AAgCfC,EAAAA,GAAG,EAAEA;AAhCU,CAAjB;;AAkCA,SAASC,MAAT,CAAgBc,CAAhB,EAAmBC,KAAnB,EAAyB;AACvB,MAAIC,OAAJ;AAAA,MACAC,MAAM,GAAG,UAASC,IAAT,EAAe;AACtB,WAAOJ,CAAC,CAACK,MAAF,GAAW,CAAX,GAAe,YAAU;AAC9B,UAAIC,MAAM,GAAGF,IAAI,GAAGA,IAAI,CAACG,MAAL,EAAH,GAAmB,EAApC;AACAL,MAAAA,OAAO,GAAGD,KAAK,GAAGC,OAAO,IAAI,IAAd,GAAqB,IAApC;AACA,aAAOI,MAAM,CAACE,IAAP,CAAYC,KAAZ,CAAkBH,MAAlB,EAA0BI,SAA1B,IACHV,CAAC,CAACK,MADC,IACSK,SAAS,CAACL,MADnB,GAELF,MAAM,CAACQ,IAAP,CAAYT,OAAZ,EAAqBI,MAArB,CAFK,GAE0BN,CAAC,CAACS,KAAF,CAAQP,OAAR,EAAiBI,MAAjB,CAFjC;AAGD,KANM,GAMHN,CANJ;AAOD,GATD;;AAUA,SAAOG,MAAM,EAAb;AACD","sourcesContent":["// Generated by LiveScript 1.6.0\nvar max, min, negate, abs, signum, quot, rem, div, mod, recip, pi, tau, exp, sqrt, ln, pow, sin, tan, cos, asin, acos, atan, atan2, truncate, round, ceiling, floor, isItNaN, even, odd, gcd, lcm;\nmax = curry$(function(x$, y$){\n  return x$ > y$ ? x$ : y$;\n});\nmin = curry$(function(x$, y$){\n  return x$ < y$ ? x$ : y$;\n});\nnegate = function(x){\n  return -x;\n};\nabs = Math.abs;\nsignum = function(x){\n  if (x < 0) {\n    return -1;\n  } else if (x > 0) {\n    return 1;\n  } else {\n    return 0;\n  }\n};\nquot = curry$(function(x, y){\n  return ~~(x / y);\n});\nrem = curry$(function(x$, y$){\n  return x$ % y$;\n});\ndiv = curry$(function(x, y){\n  return Math.floor(x / y);\n});\nmod = curry$(function(x$, y$){\n  var ref$;\n  return ((x$) % (ref$ = y$) + ref$) % ref$;\n});\nrecip = (function(it){\n  return 1 / it;\n});\npi = Math.PI;\ntau = pi * 2;\nexp = Math.exp;\nsqrt = Math.sqrt;\nln = Math.log;\npow = curry$(function(x$, y$){\n  return Math.pow(x$, y$);\n});\nsin = Math.sin;\ntan = Math.tan;\ncos = Math.cos;\nasin = Math.asin;\nacos = Math.acos;\natan = Math.atan;\natan2 = curry$(function(x, y){\n  return Math.atan2(x, y);\n});\ntruncate = function(x){\n  return ~~x;\n};\nround = Math.round;\nceiling = Math.ceil;\nfloor = Math.floor;\nisItNaN = function(x){\n  return x !== x;\n};\neven = function(x){\n  return x % 2 === 0;\n};\nodd = function(x){\n  return x % 2 !== 0;\n};\ngcd = curry$(function(x, y){\n  var z;\n  x = Math.abs(x);\n  y = Math.abs(y);\n  while (y !== 0) {\n    z = x % y;\n    x = y;\n    y = z;\n  }\n  return x;\n});\nlcm = curry$(function(x, y){\n  return Math.abs(Math.floor(x / gcd(x, y) * y));\n});\nmodule.exports = {\n  max: max,\n  min: min,\n  negate: negate,\n  abs: abs,\n  signum: signum,\n  quot: quot,\n  rem: rem,\n  div: div,\n  mod: mod,\n  recip: recip,\n  pi: pi,\n  tau: tau,\n  exp: exp,\n  sqrt: sqrt,\n  ln: ln,\n  pow: pow,\n  sin: sin,\n  tan: tan,\n  cos: cos,\n  acos: acos,\n  asin: asin,\n  atan: atan,\n  atan2: atan2,\n  truncate: truncate,\n  round: round,\n  ceiling: ceiling,\n  floor: floor,\n  isItNaN: isItNaN,\n  even: even,\n  odd: odd,\n  gcd: gcd,\n  lcm: lcm\n};\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}"]},"metadata":{},"sourceType":"script"}