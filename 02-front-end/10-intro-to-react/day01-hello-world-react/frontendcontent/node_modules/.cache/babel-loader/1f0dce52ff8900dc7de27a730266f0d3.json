{"ast":null,"code":"// Generated by LiveScript 1.6.0\nvar apply,\n    curry,\n    flip,\n    fix,\n    over,\n    memoize,\n    toString$ = {}.toString;\napply = curry$(function (f, list) {\n  return f.apply(null, list);\n});\n\ncurry = function (f) {\n  return curry$(f);\n};\n\nflip = curry$(function (f, x, y) {\n  return f(y, x);\n});\n\nfix = function (f) {\n  return function (g) {\n    return function () {\n      return f(g(g)).apply(null, arguments);\n    };\n  }(function (g) {\n    return function () {\n      return f(g(g)).apply(null, arguments);\n    };\n  });\n};\n\nover = curry$(function (f, g, x, y) {\n  return f(g(x), g(y));\n});\n\nmemoize = function (f) {\n  var memo;\n  memo = {};\n  return function () {\n    var args, res$, i$, to$, key, arg;\n    res$ = [];\n\n    for (i$ = 0, to$ = arguments.length; i$ < to$; ++i$) {\n      res$.push(arguments[i$]);\n    }\n\n    args = res$;\n\n    key = function () {\n      var i$,\n          ref$,\n          len$,\n          results$ = [];\n\n      for (i$ = 0, len$ = (ref$ = args).length; i$ < len$; ++i$) {\n        arg = ref$[i$];\n        results$.push(arg + toString$.call(arg).slice(8, -1));\n      }\n\n      return results$;\n    }().join('');\n\n    return memo[key] = key in memo ? memo[key] : f.apply(null, args);\n  };\n};\n\nmodule.exports = {\n  curry: curry,\n  flip: flip,\n  fix: fix,\n  apply: apply,\n  over: over,\n  memoize: memoize\n};\n\nfunction curry$(f, bound) {\n  var context,\n      _curry = function (args) {\n    return f.length > 1 ? function () {\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) < f.length && arguments.length ? _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n\n  return _curry();\n}","map":{"version":3,"sources":["/home/gabriel/Desktop/Trybe/trybe-assignments/02-front-end/11-intro-to-react/day01-hello-world-react/frontendcontent/node_modules/prelude-ls/lib/Func.js"],"names":["apply","curry","flip","fix","over","memoize","toString$","toString","curry$","f","list","x","y","g","arguments","memo","args","res$","i$","to$","key","arg","length","push","ref$","len$","results$","call","slice","join","module","exports","bound","context","_curry","params","concat"],"mappings":"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","sourcesContent":["// Generated by LiveScript 1.6.0\nvar apply, curry, flip, fix, over, memoize, toString$ = {}.toString;\napply = curry$(function(f, list){\n  return f.apply(null, list);\n});\ncurry = function(f){\n  return curry$(f);\n};\nflip = curry$(function(f, x, y){\n  return f(y, x);\n});\nfix = function(f){\n  return function(g){\n    return function(){\n      return f(g(g)).apply(null, arguments);\n    };\n  }(function(g){\n    return function(){\n      return f(g(g)).apply(null, arguments);\n    };\n  });\n};\nover = curry$(function(f, g, x, y){\n  return f(g(x), g(y));\n});\nmemoize = function(f){\n  var memo;\n  memo = {};\n  return function(){\n    var args, res$, i$, to$, key, arg;\n    res$ = [];\n    for (i$ = 0, to$ = arguments.length; i$ < to$; ++i$) {\n      res$.push(arguments[i$]);\n    }\n    args = res$;\n    key = (function(){\n      var i$, ref$, len$, results$ = [];\n      for (i$ = 0, len$ = (ref$ = args).length; i$ < len$; ++i$) {\n        arg = ref$[i$];\n        results$.push(arg + toString$.call(arg).slice(8, -1));\n      }\n      return results$;\n    }()).join('');\n    return memo[key] = key in memo\n      ? memo[key]\n      : f.apply(null, args);\n  };\n};\nmodule.exports = {\n  curry: curry,\n  flip: flip,\n  fix: fix,\n  apply: apply,\n  over: over,\n  memoize: memoize\n};\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}"]},"metadata":{},"sourceType":"script"}